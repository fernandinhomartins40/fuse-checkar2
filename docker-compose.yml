services:
  # Aplicação principal Fuse Checkar2
  fuse-checkar2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fuse-checkar2-app
    restart: unless-stopped
    
    # Variáveis de ambiente
    environment:
      - NODE_ENV=production
      - PORT=3005
      - FRONTEND_URL=http://31.97.85.98
      
    # Mapeamento de porta
    ports:
      - "3005:3005"
    
    # Volumes para persistência de dados
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data  # Para futuros dados da aplicação (uploads, etc.)
    
    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { host: 'localhost', port: 3005, path: '/api/health', timeout: 2000 }; const req = http.get(options, (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Recursos limitados para não impactar outras apps
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Rede isolada
    networks:
      - fuse-checkar2-network
    
    # Labels para organização
    labels:
      - "com.fuse-checkar2.description=Fuse Checkar2 - Sistema de Revisões Automotivas"
      - "com.fuse-checkar2.version=1.0.0"
      - "com.fuse-checkar2.port=3005"

  # Nginx reverse proxy (opcional - apenas se quiser usar nginx dentro do container)
  nginx:
    image: nginx:alpine
    container_name: fuse-checkar2-nginx
    restart: unless-stopped
    
    # Mapear apenas se quiser nginx separado (descomente as linhas abaixo)
    # ports:
    #   - "8005:80"  # Porta externa diferente para evitar conflitos
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs:/var/log/nginx
    
    depends_on:
      - fuse-checkar2
    
    networks:
      - fuse-checkar2-network
    
    # Recursos limitados
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.1'
        reservations:
          memory: 64M
          cpus: '0.05'
    
    profiles:
      - nginx  # Ativar apenas se necessário: docker-compose --profile nginx up

# Rede isolada para a aplicação
networks:
  fuse-checkar2-network:
    driver: bridge
    name: fuse-checkar2-net

# Volumes nomeados para persistência
volumes:
  fuse-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs
  
  fuse-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data